// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.12.3
// source: stricache.proto

package stricache

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StringItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Expiration string `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *StringItem) Reset() {
	*x = StringItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stricache_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StringItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringItem) ProtoMessage() {}

func (x *StringItem) ProtoReflect() protoreflect.Message {
	mi := &file_stricache_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringItem.ProtoReflect.Descriptor instead.
func (*StringItem) Descriptor() ([]byte, []int) {
	return file_stricache_proto_rawDescGZIP(), []int{0}
}

func (x *StringItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *StringItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *StringItem) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

type IntItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value      int64  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	Expiration string `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *IntItem) Reset() {
	*x = IntItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stricache_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntItem) ProtoMessage() {}

func (x *IntItem) ProtoReflect() protoreflect.Message {
	mi := &file_stricache_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntItem.ProtoReflect.Descriptor instead.
func (*IntItem) Descriptor() ([]byte, []int) {
	return file_stricache_proto_rawDescGZIP(), []int{1}
}

func (x *IntItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *IntItem) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *IntItem) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

type FloatItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key        string  `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value      float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Expiration string  `protobuf:"bytes,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
}

func (x *FloatItem) Reset() {
	*x = FloatItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stricache_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FloatItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FloatItem) ProtoMessage() {}

func (x *FloatItem) ProtoReflect() protoreflect.Message {
	mi := &file_stricache_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FloatItem.ProtoReflect.Descriptor instead.
func (*FloatItem) Descriptor() ([]byte, []int) {
	return file_stricache_proto_rawDescGZIP(), []int{2}
}

func (x *FloatItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *FloatItem) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *FloatItem) GetExpiration() string {
	if x != nil {
		return x.Expiration
	}
	return ""
}

type GetKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetKey) Reset() {
	*x = GetKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stricache_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetKey) ProtoMessage() {}

func (x *GetKey) ProtoReflect() protoreflect.Message {
	mi := &file_stricache_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetKey.ProtoReflect.Descriptor instead.
func (*GetKey) Descriptor() ([]byte, []int) {
	return file_stricache_proto_rawDescGZIP(), []int{3}
}

func (x *GetKey) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Success) Reset() {
	*x = Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stricache_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Success) ProtoMessage() {}

func (x *Success) ProtoReflect() protoreflect.Message {
	mi := &file_stricache_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Success.ProtoReflect.Descriptor instead.
func (*Success) Descriptor() ([]byte, []int) {
	return file_stricache_proto_rawDescGZIP(), []int{4}
}

func (x *Success) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_stricache_proto protoreflect.FileDescriptor

var file_stricache_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x22, 0x54, 0x0a, 0x0a,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x07, 0x49, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x53, 0x0a, 0x09, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x06, 0x47, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x32, 0xc5, 0x06, 0x0a, 0x10,
	0x53, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x1a, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x30, 0x0a, 0x06, 0x41,
	0x64, 0x64, 0x49, 0x6e, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x49, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x36, 0x0a,
	0x08, 0x41, 0x64, 0x64, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a,
	0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x61,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3d, 0x0a, 0x0d, 0x55, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x15, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x34, 0x0a, 0x0a, 0x55, 0x6e, 0x73, 0x68, 0x69, 0x66, 0x74, 0x49,
	0x6e, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x0c, 0x55, 0x6e,
	0x73, 0x68, 0x69, 0x66, 0x74, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x74, 0x72,
	0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x1a, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x3a, 0x0a, 0x0a, 0x50, 0x75, 0x73, 0x68, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x12, 0x15, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x15, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x31, 0x0a, 0x07, 0x50, 0x75, 0x73, 0x68, 0x49, 0x6e, 0x74, 0x12, 0x12, 0x2e,
	0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x49, 0x6e,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x09, 0x50, 0x75, 0x73, 0x68, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x46,
	0x6c, 0x6f, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x35,
	0x0a, 0x09, 0x47, 0x65, 0x74, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x11, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x15,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2f, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x74, 0x12,
	0x11, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x49,
	0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x33, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x6f,
	0x61, 0x74, 0x12, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47,
	0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68,
	0x65, 0x2e, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x32, 0x0a, 0x09, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x11, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x12, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x31, 0x0a, 0x08, 0x53, 0x68, 0x69, 0x66, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x11, 0x2e, 0x73, 0x74,
	0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a, 0x12,
	0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x50, 0x6f, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x11, 0x2e, 0x73,
	0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x1a,
	0x12, 0x2e, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x42, 0x0d, 0x5a, 0x0b, 0x2e, 0x2f, 0x73, 0x74, 0x72, 0x69, 0x63, 0x61, 0x63,
	0x68, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stricache_proto_rawDescOnce sync.Once
	file_stricache_proto_rawDescData = file_stricache_proto_rawDesc
)

func file_stricache_proto_rawDescGZIP() []byte {
	file_stricache_proto_rawDescOnce.Do(func() {
		file_stricache_proto_rawDescData = protoimpl.X.CompressGZIP(file_stricache_proto_rawDescData)
	})
	return file_stricache_proto_rawDescData
}

var file_stricache_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_stricache_proto_goTypes = []interface{}{
	(*StringItem)(nil), // 0: stricache.StringItem
	(*IntItem)(nil),    // 1: stricache.IntItem
	(*FloatItem)(nil),  // 2: stricache.FloatItem
	(*GetKey)(nil),     // 3: stricache.GetKey
	(*Success)(nil),    // 4: stricache.Success
}
var file_stricache_proto_depIdxs = []int32{
	0,  // 0: stricache.StricacheService.AddString:input_type -> stricache.StringItem
	1,  // 1: stricache.StricacheService.AddInt:input_type -> stricache.IntItem
	2,  // 2: stricache.StricacheService.AddFloat:input_type -> stricache.FloatItem
	0,  // 3: stricache.StricacheService.UnshiftString:input_type -> stricache.StringItem
	1,  // 4: stricache.StricacheService.UnshiftInt:input_type -> stricache.IntItem
	2,  // 5: stricache.StricacheService.UnshiftFloat:input_type -> stricache.FloatItem
	0,  // 6: stricache.StricacheService.PushString:input_type -> stricache.StringItem
	1,  // 7: stricache.StricacheService.PushInt:input_type -> stricache.IntItem
	2,  // 8: stricache.StricacheService.PushFloat:input_type -> stricache.FloatItem
	3,  // 9: stricache.StricacheService.GetString:input_type -> stricache.GetKey
	3,  // 10: stricache.StricacheService.GetInt:input_type -> stricache.GetKey
	3,  // 11: stricache.StricacheService.GetFloat:input_type -> stricache.GetKey
	3,  // 12: stricache.StricacheService.DeleteKey:input_type -> stricache.GetKey
	3,  // 13: stricache.StricacheService.ShiftKey:input_type -> stricache.GetKey
	3,  // 14: stricache.StricacheService.PopKey:input_type -> stricache.GetKey
	0,  // 15: stricache.StricacheService.AddString:output_type -> stricache.StringItem
	1,  // 16: stricache.StricacheService.AddInt:output_type -> stricache.IntItem
	2,  // 17: stricache.StricacheService.AddFloat:output_type -> stricache.FloatItem
	0,  // 18: stricache.StricacheService.UnshiftString:output_type -> stricache.StringItem
	1,  // 19: stricache.StricacheService.UnshiftInt:output_type -> stricache.IntItem
	2,  // 20: stricache.StricacheService.UnshiftFloat:output_type -> stricache.FloatItem
	0,  // 21: stricache.StricacheService.PushString:output_type -> stricache.StringItem
	1,  // 22: stricache.StricacheService.PushInt:output_type -> stricache.IntItem
	2,  // 23: stricache.StricacheService.PushFloat:output_type -> stricache.FloatItem
	0,  // 24: stricache.StricacheService.GetString:output_type -> stricache.StringItem
	1,  // 25: stricache.StricacheService.GetInt:output_type -> stricache.IntItem
	2,  // 26: stricache.StricacheService.GetFloat:output_type -> stricache.FloatItem
	4,  // 27: stricache.StricacheService.DeleteKey:output_type -> stricache.Success
	4,  // 28: stricache.StricacheService.ShiftKey:output_type -> stricache.Success
	4,  // 29: stricache.StricacheService.PopKey:output_type -> stricache.Success
	15, // [15:30] is the sub-list for method output_type
	0,  // [0:15] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_stricache_proto_init() }
func file_stricache_proto_init() {
	if File_stricache_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_stricache_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StringItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stricache_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stricache_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FloatItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stricache_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stricache_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stricache_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stricache_proto_goTypes,
		DependencyIndexes: file_stricache_proto_depIdxs,
		MessageInfos:      file_stricache_proto_msgTypes,
	}.Build()
	File_stricache_proto = out.File
	file_stricache_proto_rawDesc = nil
	file_stricache_proto_goTypes = nil
	file_stricache_proto_depIdxs = nil
}
